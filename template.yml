AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: CloudFormation stack for the Intelligent Photo Album

# Globals:
  # TODO

Parameters:
  VPCSecurityGroup:
    Type: String
  VPCSubnet:
    Type: String


Resources:
  # S3 Bucket#############################################################################
  ImagesBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: s3:ObjectCreated:Put
            Function: !GetAtt PhotoIndexLambda.Arn
        


  # Lambdas ################################################################################
  PhotoIndexLambda:
    Type: 'AWS::Serverless::Function'
    Properties:
      Runtime: python3.9
      CodeUri: src/lambdas/PhotoIndexLambda/
      Handler: lambda_function.lambda_handler
      Description: A lambda function to index photos uploaded to our s3 bucket in OpenSearch
      MemorySize: 128
      Timeout: 30
      Role: !GetAtt TextRecognitionLambdaRole.Arn
      VpcConfig:
        SecurityGroupIds:
          - !Ref VPCSecurityGroup
        SubnetIds:
          - !Ref VPCSubnet


  # Roles ###################################################################################
  # Role for Lambda
  TextRecognitionLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - logs:CreateLogGroup
                  - logs:DescribeLogGroups
                  - logs:CreateLogStream
                  - logs:DescribeLogStreams
                  - logs:PutLogEvents
                Effect: Allow
                Resource:
                  - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*'
              - Action:
                  - 's3:GetObject'
                Effect: Allow
                Resource: 'arn:aws:s3:::*'
              - Action:
                  - rekognition:DetectText
                Effect: Allow
                Resource: "*"
            Version: '2012-10-17'
          PolicyName: TextRecognitionLambdaPolicy
      RoleName: TextRecognitionLambdaRole


# Outputs:
  # TODO